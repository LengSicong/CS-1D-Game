/*
   This file was generated automatically by the Mojo IDE version B1.3.6.
   Do not edit this file directly. Instead edit the original Lucid source.
   This is a temporary file and any changes made to it will be destroyed.
*/

module miniBeta_2 (
    input [7:0] button,
    input clk,
    input rst,
    output reg [127:0] s_seg_display,
    output reg [15:0] target_display,
    output reg opr_display
  );
  
  
  
  wire [16-1:0] M_game_alu_out;
  wire [1-1:0] M_game_alu_z;
  wire [1-1:0] M_game_alu_v;
  wire [1-1:0] M_game_alu_n;
  reg [16-1:0] M_game_alu_a;
  reg [16-1:0] M_game_alu_b;
  reg [6-1:0] M_game_alu_alufn;
  alu_6 game_alu (
    .a(M_game_alu_a),
    .b(M_game_alu_b),
    .alufn(M_game_alu_alufn),
    .out(M_game_alu_out),
    .z(M_game_alu_z),
    .v(M_game_alu_v),
    .n(M_game_alu_n)
  );
  
  wire [(4'h8+0)-1:0] M_edge_detector_out;
  reg [(4'h8+0)-1:0] M_edge_detector_in;
  
  genvar GEN_edge_detector0;
  generate
  for (GEN_edge_detector0=0;GEN_edge_detector0<4'h8;GEN_edge_detector0=GEN_edge_detector0+1) begin: edge_detector_gen_0
    edge_detector_7 edge_detector (
      .clk(clk),
      .in(M_edge_detector_in[GEN_edge_detector0*(1)+(1)-1-:(1)]),
      .out(M_edge_detector_out[GEN_edge_detector0*(1)+(1)-1-:(1)])
    );
  end
  endgenerate
  wire [(4'h8+0)-1:0] M_button_cond_out;
  reg [(4'h8+0)-1:0] M_button_cond_in;
  
  genvar GEN_button_cond0;
  generate
  for (GEN_button_cond0=0;GEN_button_cond0<4'h8;GEN_button_cond0=GEN_button_cond0+1) begin: button_cond_gen_0
    button_conditioner_8 button_cond (
      .clk(clk),
      .in(M_button_cond_in[GEN_button_cond0*(1)+(1)-1-:(1)]),
      .out(M_button_cond_out[GEN_button_cond0*(1)+(1)-1-:(1)])
    );
  end
  endgenerate
  wire [1-1:0] M_timer_out;
  reg [1-1:0] M_timer_rst;
  timer_9 timer (
    .clk(clk),
    .rst(M_timer_rst),
    .out(M_timer_out)
  );
  wire [32-1:0] M_ran_num;
  reg [1-1:0] M_ran_next;
  reg [32-1:0] M_ran_seed;
  pn_gen_10 ran (
    .clk(clk),
    .rst(rst),
    .next(M_ran_next),
    .seed(M_ran_seed),
    .num(M_ran_num)
  );
  wire [16-1:0] M_game_regfiles_ra_data;
  wire [16-1:0] M_game_regfiles_rb_data;
  reg [4-1:0] M_game_regfiles_write_address;
  reg [1-1:0] M_game_regfiles_we;
  reg [16-1:0] M_game_regfiles_wdata;
  reg [4-1:0] M_game_regfiles_read_address_a;
  reg [4-1:0] M_game_regfiles_read_address_b;
  regfiles_11 game_regfiles (
    .clk(clk),
    .rst(rst),
    .write_address(M_game_regfiles_write_address),
    .we(M_game_regfiles_we),
    .wdata(M_game_regfiles_wdata),
    .read_address_a(M_game_regfiles_read_address_a),
    .read_address_b(M_game_regfiles_read_address_b),
    .ra_data(M_game_regfiles_ra_data),
    .rb_data(M_game_regfiles_rb_data)
  );
  wire [128-1:0] M_game_controlunit_s_seg_display;
  wire [16-1:0] M_game_controlunit_target_display;
  wire [1-1:0] M_game_controlunit_opr_display;
  wire [6-1:0] M_game_controlunit_alufn;
  wire [2-1:0] M_game_controlunit_wdsel;
  wire [4-1:0] M_game_controlunit_write_address;
  wire [1-1:0] M_game_controlunit_we;
  wire [16-1:0] M_game_controlunit_cu_output_data;
  wire [4-1:0] M_game_controlunit_read_address_a;
  wire [4-1:0] M_game_controlunit_read_address_b;
  wire [1-1:0] M_game_controlunit_timer_start;
  reg [1-1:0] M_game_controlunit_timer;
  reg [32-1:0] M_game_controlunit_ran;
  reg [16-1:0] M_game_controlunit_ra_data;
  reg [16-1:0] M_game_controlunit_rb_data;
  reg [1-1:0] M_game_controlunit_start;
  reg [8-1:0] M_game_controlunit_button;
  game_CU_12 game_controlunit (
    .clk(clk),
    .rst(rst),
    .timer(M_game_controlunit_timer),
    .ran(M_game_controlunit_ran),
    .ra_data(M_game_controlunit_ra_data),
    .rb_data(M_game_controlunit_rb_data),
    .start(M_game_controlunit_start),
    .button(M_game_controlunit_button),
    .s_seg_display(M_game_controlunit_s_seg_display),
    .target_display(M_game_controlunit_target_display),
    .opr_display(M_game_controlunit_opr_display),
    .alufn(M_game_controlunit_alufn),
    .wdsel(M_game_controlunit_wdsel),
    .write_address(M_game_controlunit_write_address),
    .we(M_game_controlunit_we),
    .cu_output_data(M_game_controlunit_cu_output_data),
    .read_address_a(M_game_controlunit_read_address_a),
    .read_address_b(M_game_controlunit_read_address_b),
    .timer_start(M_game_controlunit_timer_start)
  );
  
  integer i;
  
  always @* begin
    opr_display = 1'h0;
    s_seg_display = 128'h00140014001400140014001400140014;
    target_display = 1'h0;
    for (i = 1'h0; i < 4'h8; i = i + 1) begin
      M_button_cond_in[(i)*1+0-:1] = button[(i)*1+0-:1];
    end
    for (i = 1'h0; i < 4'h8; i = i + 1) begin
      M_edge_detector_in[(i)*1+0-:1] = M_button_cond_out[(i)*1+0-:1];
    end
    M_game_controlunit_start = M_edge_detector_out[0+0-:1];
    M_ran_seed = 1'h1;
    M_ran_next = 1'h1;
    M_game_controlunit_ran = M_ran_num;
    M_game_controlunit_button = M_edge_detector_out;
    M_game_controlunit_ra_data = M_game_regfiles_ra_data;
    M_game_controlunit_rb_data = M_game_regfiles_rb_data;
    s_seg_display = M_game_controlunit_s_seg_display;
    target_display = M_game_controlunit_target_display;
    opr_display = M_game_controlunit_opr_display;
    M_game_controlunit_timer = M_timer_out;
    M_timer_rst = M_game_controlunit_timer_start;
    M_game_regfiles_we = M_game_controlunit_we;
    M_game_regfiles_write_address = M_game_controlunit_write_address;
    M_game_regfiles_read_address_a = M_game_controlunit_read_address_a;
    M_game_regfiles_read_address_b = M_game_controlunit_read_address_b;
    M_game_alu_a = M_game_regfiles_ra_data;
    M_game_alu_b = M_game_regfiles_rb_data;
    M_game_alu_alufn = M_game_controlunit_alufn;
    
    case (M_game_controlunit_wdsel)
      2'h0: begin
        M_game_regfiles_wdata = M_game_alu_out;
      end
      2'h1: begin
        M_game_regfiles_wdata = 1'h0;
      end
      2'h2: begin
        M_game_regfiles_wdata = 16'hffff;
      end
      2'h3: begin
        M_game_regfiles_wdata = M_game_controlunit_cu_output_data;
      end
      default: begin
        M_game_regfiles_wdata = M_game_alu_out;
      end
    endcase
  end
endmodule
